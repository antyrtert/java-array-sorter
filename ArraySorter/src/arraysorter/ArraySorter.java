package arraysorter;

import java.awt.*;
import java.awt.image.*;
import javax.swing.*;
import javax.swing.event.*;

/**
 * Main window(frame) class
 * @author Voronin Daniil
 */
public class ArraySorter extends javax.swing.JFrame {

    /**
     * Creates new form ArraySorter
     */
    public ArraySorter() {
        initComponents();

        array.tryParseArray(arrayTextArea.getText());
        array.update.addListener(() -> {
            printArray();
            long time = Math.round(200d / Math.sqrt(array.getLength()));
            thread.sleep(time);
        });
        
        arrayTextArea.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                String text = arrayTextArea.getText();
                if (text.equals("")) return;
                
                array.tryParseArray(text);
                drawArray();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                changedUpdate(e);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                changedUpdate(e);
            }
        });
        
        for (var a : Algorithm.values()) {
            algorithmComboBox.addItem(a.toString());
        }
    }
    
    private Array array = new Array(0);
    private ISorter sorter = new Shuffler(array);
    private SleepingThread thread = new SleepingThread(() -> sorter.sort());
    
    private void printArray() {
        arrayTextArea.setText(array.toString());
    }
    
    private void drawArray() {
        Insets insets = imagePanel.getInsets();
        int width  = Math.max(1, imagePanel.getWidth()  - insets.left - insets.right),
            height = Math.max(1, imagePanel.getHeight() - insets.top - insets.bottom),
            imageType = BufferedImage.TYPE_INT_ARGB;
        BufferedImage icon = new BufferedImage(width, height, imageType);
        
        array.render(icon);
        
        imageLabel.setIcon(new ImageIcon(icon));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        imagePanel = new javax.swing.JScrollPane();
        imageLabel = new javax.swing.JLabel();
        controlPanel = new javax.swing.JPanel();
        javax.swing.JLabel byLabel = new javax.swing.JLabel();
        javax.swing.JButton playButton = new javax.swing.JButton();
        javax.swing.JButton fillButton = new javax.swing.JButton();
        algorithmComboBox = new javax.swing.JComboBox<>();
        javax.swing.JScrollPane arrayScrollPanel = new javax.swing.JScrollPane();
        arrayTextArea = new javax.swing.JTextArea();
        javax.swing.JButton sortButton = new javax.swing.JButton();
        fromTextField = new javax.swing.JTextField();
        toTextField = new javax.swing.JTextField();
        stepTextField = new javax.swing.JTextField();
        javax.swing.JLabel startLabel = new javax.swing.JLabel();
        javax.swing.JLabel endLabel = new javax.swing.JLabel();
        javax.swing.JLabel stepLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Array sort visualizer");

        splitPane.setPreferredSize(new java.awt.Dimension(0, 0));

        imagePanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        imagePanel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        imagePanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                imagePanelComponentResized(evt);
            }
        });
        imagePanel.setViewportView(imageLabel);

        splitPane.setRightComponent(imagePanel);

        controlPanel.setPreferredSize(new java.awt.Dimension(0, 0));

        byLabel.setBackground(java.awt.Color.gray);
        byLabel.setForeground(java.awt.Color.gray);
        byLabel.setText("by Voronin Daniil 2023");

        playButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        playButton.setText("Start / Stop");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        fillButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fillButton.setText("Fill");
        fillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillButtonActionPerformed(evt);
            }
        });

        algorithmComboBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        algorithmComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                algorithmComboBoxItemStateChanged(evt);
            }
        });

        arrayTextArea.setColumns(20);
        arrayTextArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        arrayTextArea.setLineWrap(true);
        arrayTextArea.setRows(5);
        arrayTextArea.setText("10, -10, 9.5, -9.5, 9, -9, 8.5, -8.5, 8, -8, 7.5, -7.5, 7, -7, 6.5, -6.5, 6, -6, 5.5, -5.5, 5, -5, 4.5, -4.5, 4, -4, 3.5, -3.5, 3, -3, 2.5, -2.5, 2, -2, 1.5, -1.5, 1, -1, 0.5, -0.5, 0 ");
        arrayTextArea.setWrapStyleWord(true);
        arrayScrollPanel.setViewportView(arrayTextArea);

        sortButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sortButton.setText("Sort");
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });

        fromTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fromTextField.setText("-8");

        toTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        toTextField.setText("8");
        toTextField.setPreferredSize(new java.awt.Dimension(32, 26));

        stepTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        stepTextField.setText("0.5");

        startLabel.setText("Start:");

        endLabel.setText("End:");

        stepLabel.setText(" Step:");

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(algorithmComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(arrayScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(byLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(playButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sortButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(fillButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fromTextField)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(startLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endLabel)
                    .addComponent(toTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(stepLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(stepTextField)))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addComponent(algorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sortButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startLabel)
                    .addComponent(endLabel)
                    .addComponent(stepLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stepTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fillButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arrayScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(byLabel))
        );

        splitPane.setLeftComponent(controlPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imagePanelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_imagePanelComponentResized
        drawArray();
    }//GEN-LAST:event_imagePanelComponentResized

    private void fillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillButtonActionPerformed
        double from = Array.tryParseDouble(fromTextField.getText()),
               to   = Array.tryParseDouble(toTextField.getText()),
               step = Array.tryParseDouble(stepTextField.getText());
        int length = (int)Math.max((to - from) / step, 0) + 1;
        
        array.update.supressInvoke(() -> {
            thread.stop();
            array.alloc(length);

            for (int i = 0; i < length; i++) {
                array.set(i, from + step * i);
            }
        });
    }//GEN-LAST:event_fillButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        if (!thread.isRunning()) {
            thread.start();
        } else if (thread.paused) {
            thread.resume();
        } else {
            thread.pause();
        }
    }//GEN-LAST:event_playButtonActionPerformed

    private void algorithmComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_algorithmComboBoxItemStateChanged
        String name = algorithmComboBox.getSelectedItem().toString();
        thread.stop();
        sorter = Algorithm.get(name).newInstance(array);
        thread = new SleepingThread(() -> sorter.sort());
    }//GEN-LAST:event_algorithmComboBoxItemStateChanged

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        array.update.supressInvoke(() -> {
            thread.stop();
            sorter.sort();
        });
    }//GEN-LAST:event_sortButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            // UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArraySorter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ArraySorter().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> algorithmComboBox;
    private javax.swing.JTextArea arrayTextArea;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JTextField fromTextField;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JScrollPane imagePanel;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JTextField stepTextField;
    private javax.swing.JTextField toTextField;
    // End of variables declaration//GEN-END:variables
}
